rel_orders <- Orders$Order_ID[i]
}
print(rel_orders)
}
#####################NEW TAKE
customer_report <- function(Input_Customer_ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders =c()
for(i in seq_along(Orders)){
rel_orders <- Orders$Order_ID[i]
}
print(rel_orders)
}
#####################NEW TAKE
customer_report <- function(Input_Customer_ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders =c()
for(i in ncol(Orders)){
print(Orders$Order_ID[i])
}
print(rel_orders)
}
customer_report(1, "2022-05-14", "2022-06-06")
#####################NEW TAKE
customer_report <- function(Input_Customer_ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
dplyr::filter(Orders$Order_ID, Order_ID == ID, Date >= Date_Start, Date <= Date_End)
}
customer_report(1, "2022-05-14", "2022-06-06")
ls.str(Orders)
Orders$Order_ID <- as.factor(Orders$Order_ID)
#####################NEW TAKE
customer_report <- function(Input_Customer_ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
dplyr::filter(Orders$Order_ID, Order_ID == ID, Date >= Date_Start, Date <= Date_End)
}
customer_report(1, "2022-05-14", "2022-06-06")
Orders$Customer_ID <- as.factor(Orders$Customer_ID)
Orders <- read_csv("Orders.csv")
Orders$Customer_ID <- as.factor(Orders$Customer_ID)
#####################NEW TAKE
customer_report <- function(Input_Customer_ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
dplyr::filter(Orders$Order_ID, Order_ID == ID, Date >= Date_Start, Date <= Date_End)
}
customer_report(1, "2022-05-14", "2022-06-06")
#####################NEW TAKE
customer_report <- function(Input_Customer_ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
dplyr::filter(Orders$Order_ID, Orders$Order_ID == ID, Orders$Date >= Date_Start, Orders$Date <= Date_End)
}
customer_report(1, "2022-05-14", "2022-06-06")
ls.str(Orders)
#####################NEW TAKE
customer_report <- function(Input_Customer_ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
dplyr::select(Orders$Order_ID, Orders$Order_ID == ID, Orders$Date >= Date_Start, Orders$Date <= Date_End)
}
customer_report(1, "2022-05-14", "2022-06-06")
#####################NEW TAKE
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
Orders[Orders$Order_ID == ID & Orders$Date >= Date_Start & Orders$Date <= Date_End,]
}
customer_report(1, "2022-05-14", "2022-06-06")
a<- customer_report(1, "2022-05-14", "2022-06-06")
View(a)
#####################NEW TAKE
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
Orders[Orders$Costumer_ID == ID & Orders$Date >= Date_Start & Orders$Date <= Date_End,]
}
a<- customer_report(1, "2022-05-14", "2022-06-06")
#####################NEW TAKE
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
Orders[Orders$Customer_ID == ID & Orders$Date >= Date_Start & Orders$Date <= Date_End,]
}
a<- customer_report(1, "2022-05-14", "2022-06-06")
View(a)
a<- customer_report(1, "2022-05-14", "2022-06-01")
View(a)
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
subset(Orders, Order_ID == ID & Date >= Date_Start & Date <= Date_End)
}
a<- customer_report(1, "2022-05-14", "2022-06-01")
a<- customer_report(1, "2022-05-14", "2022-08-06")
View(a)
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
subset(Orders, Order_ID == ID & Date >= Date_Start & Date <= Date_End)
}
customer_report1 <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
subset(Orders, Order_ID == ID & Date >= Date_Start & Date <= Date_End)
}
a<- customer_report1(1, "2022-05-14", "2022-08-06")
customer_report1 <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
}
a<- customer_report1(1, "2022-05-14", "2022-08-06")
View(a)
customer_report1 <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
print(rel_orders)
}
a<- customer_report1(1, "2022-05-14", "2022-08-06")
customer_report(1, "2022-05-14", "2022-08-06")
#####################NEW TAKE
Orders$Customer_ID <- as.factor(Orders$Customer_ID)
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
print(rel_orders)
}
customer_report(1, "2022-05-14", "2022-08-06")
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
#print(rel_orders)
if(grepl(ustomer_ID, rel_orders)) {  #skal customerID være med ""?
print(paste("Full name:", customers$First_name[i], customers$Last_name[i]))
print(paste("Age:", customers$Age[i]))
num_orders <- grep(Customer_ID, rel_orders)
print(paste("Number of orders:", length(num_orders)))
} else if(grepl(Input_Customer_ID, Orders$Customer_ID[i])) {
print("Customer ID exists in the database")
} else {
print("Customer ID not found")
}
customer_report(1, "2022-05-14", "2022-08-06")
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
#print(rel_orders)
if(grepl(Customer_ID, rel_orders)) {  #skal customerID være med ""?
print(paste("Full name:", customers$First_name[i], customers$Last_name[i]))
print(paste("Age:", customers$Age[i]))
num_orders <- grep(Customer_ID, rel_orders)
print(paste("Number of orders:", length(num_orders)))
} else if(grepl(Input_Customer_ID, Orders$Customer_ID[i])) {
print("Customer ID exists in the database")
} else {
print("Customer ID not found")
}
customer_report(1, "2022-05-14", "2022-08-06")
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
#print(rel_orders)
if(grepl(rel_orders$Costumer_ID, rel_orders)) {  #skal customerID være med ""?
print(paste("Full name:", customers$First_name[i], customers$Last_name[i]))
print(paste("Age:", customers$Age[i]))
num_orders <- grep(Customer_ID, rel_orders)
print(paste("Number of orders:", length(num_orders)))
} else if(grepl(Input_Customer_ID, Orders$Customer_ID[i])) {
print("Customer ID exists in the database")
} else {
print("Customer ID not found")
}
customer_report(1, "2022-05-14", "2022-08-06")
View(a)
?grepl()
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
#print(rel_orders)
if(grepl(rel_orders$Customer_ID, rel_orders)) {  #skal customerID være med ""?
print(paste("Full name:", customers$First_name[i], customers$Last_name[i]))
print(paste("Age:", customers$Age[i]))
num_orders <- grep(Customer_ID, rel_orders)
print(paste("Number of orders:", length(num_orders)))
} #else if(grepl(Input_Customer_ID, Orders$Customer_ID[i])) {
#print("Customer ID exists in the database")
#} else {
#print("Customer ID not found")
#}
}
#
customer_report(1, "2022-05-14", "2022-08-06")
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
#print(rel_orders)
if(grepl(rel_orders$Customer_ID, rel_orders)) {  #skal customerID være med ""?
print(paste("Full name:", customers$First_name[i], customers$Last_name[i]))
print(paste("Age:", customers$Age[i]))
num_orders <- grep(rel_ordersCustomer_ID, rel_orders)
print(paste("Number of orders:", length(num_orders)))
} #else if(grepl(Input_Customer_ID, Orders$Customer_ID[i])) {
#print("Customer ID exists in the database")
#} else {
#print("Customer ID not found")
#}
}
#
customer_report(1, "2022-05-14", "2022-08-06")
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
#print(rel_orders)
if(grepl(rel_orders$Customer_ID, rel_orders)) {  #skal customerID være med ""?
print(paste("Full name:", customers$First_name[i], customers$Last_name[i]))
print(paste("Age:", customers$Age[i]))
num_orders <- grep(rel_orders$Customer_ID, rel_orders)
print(paste("Number of orders:", length(num_orders)))
} #else if(grepl(Input_Customer_ID, Orders$Customer_ID[i])) {
#print("Customer ID exists in the database")
#} else {
#print("Customer ID not found")
#}
}
#
customer_report(1, "2022-05-14", "2022-08-06")
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
#print(rel_orders)
if(grepl(rel_orders$Customer_ID, rel_orders)) {  #skal customerID være med ""?
print(paste("Full name:", customers$First_name[i], customers$Last_name[i]))
print(paste("Age:", customers$Age[i]))
num_orders <- grep(rel_orders$Customer_ID, rel_orders)
print(paste("Number of orders:", length(num_orders)))
} else if(grepl(rel_orders$Customer_ID, Orders$Customer_ID[i])) {
print("Customer ID exists in the database")
} else {
print("Customer ID not found")
}
#
customer_report(1, "2022-05-14", "2022-08-06")
#testing the function
customer_report(1, "2022-05-14", "2022-08-06")
View(a)
View(customers)
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
#print(rel_orders)
if(grepl(rel_orders$Customer_ID, rel_orders)) {  #skal customerID være med ""?
print(paste("Full name:", customers$First_name, customers$Last_name))
print(paste("Age:", customers$Age))
num_orders <- grep(rel_orders$Customer_ID, rel_orders)
print(paste("Number of orders:", length(num_orders)))
} #else if(grepl(rel_orders$Customer_ID, Orders$Customer_ID[i])) {  ##### noget skal fikses her :))
#print("Customer ID exists in the database")
} #else {
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
#print(rel_orders)
if(grepl(rel_orders$Customer_ID, rel_orders)) {  #skal customerID være med ""?
print(paste("Full name:", customers$First_name, customers$Last_name))
print(paste("Age:", customers$Age))
num_orders <- grep(rel_orders$Customer_ID, rel_orders)
print(paste("Number of orders:", length(num_orders)))
} #else if(grepl(rel_orders$Customer_ID, Orders$Customer_ID[i])) {  ##### noget skal fikses her :))
#print("Customer ID exists in the database")
#} else {
#print("Customer ID not found")
#}
}
#testing the function
customer_report(1, "2022-05-14", "2022-08-06")
customer_report <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
print(rel_orders)
}
#testing the function
customer_report(1, "2022-05-14", "2022-08-06")
#testing the function (It works, should output 7 variables)
a <- customer_report(1, "2022-05-14", "2022-08-06")
print(a)
View(a)
##### NEW TAKE WITH SPECIFICATIONS
customer_report1 <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
#print(rel_orders)
if(grepl(rel_orders$Customer_ID, rel_orders)) {
print(paste("Full name:", customers$First_name, customers$Last_name))
print(paste("Age:", customers$Age[i]))
num_orders <- grep(Customer_ID, rel_orders)
print(paste("Number of orders:", length(num_orders)))
} else if(grepl(Input_Customer_ID, Orders$Customer_ID[i])) {
print("Customer ID exists in the database")
} else {
print("Customer ID not found")
}
customer_report1(1, "2022-05-14", "2022-08-06")
##### NEW TAKE WITH SPECIFICATIONS
customer_report1 <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
#print(rel_orders)
for(i in ncol(rel_orders)) {
if(grepl(rel_orders$Customer_ID, rel_orders)) {
print(paste("Full name:", customers$First_name[i], customers$Last_name[i]))
print(paste("Age:", customers$Age[i]))
num_orders <- grep(Customer_ID, rel_orders)
print(paste("Number of orders:", length(num_orders)))
} else if(grepl(Input_Customer_ID, Orders$Customer_ID[i])) {
print("Customer ID exists in the database")
} else {
print("Customer ID not found")
}
customer_report1(1, "2022-05-14", "2022-08-06")
##### NEW TAKE WITH SPECIFICATIONS
customer_report1 <- function(ID, Date_Start, Date_End) {
as.Date(Date_Start, "%Y-%m-%d")
as.Date(Date_End, "%Y-%m-%d")
rel_orders<- subset(Orders, Customer_ID == ID & Date >= Date_Start & Date <= Date_End)
#print(rel_orders)
for(i in ncol(rel_orders)) {
if(grepl(rel_orders$Customer_ID, rel_orders)) {
print(paste("Full name:", customers$First_name[i], customers$Last_name[i]))
print(paste("Age:", customers$Age[i]))
num_orders <- grep(rel_orders$Customer_ID, rel_orders)
print(paste("Number of orders:", length(num_orders)))
} else if(grepl(Orders$Customer_ID, Orders$Customer_ID[i])) {
print("Customer ID exists in the database")
} else {
print("Customer ID not found")
}
customer_report1(1, "2022-05-14", "2022-08-06")
setwd("~/Desktop/OneDrive - Aarhus Universitet/Cognitive Science/5th semester/CDS_EXAM")
knitr::opts_chunk$set(echo = TRUE)
#loading packages
pacman::p_load(ggplot2, tidyverse)
setwd("~/Desktop/OneDrive - Aarhus Universitet/Cognitive Science/5th semester/CDS_EXAM")
# Loading files from google drive
id_2014 <- "1Nes6x0xB-M2tnPu4DA0AJbD0hVuiXDc4" # google file ID - hbsc 2014
hbsc2014<- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id_2014)) # data hbsc 2014
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Desktop/OneDrive - Aarhus Universitet/Cognitive Science/5th semester/CDS_EXAM/CultDat_EXAM")
knitr::opts_chunk$set(echo = TRUE)
#loading packages
pacman::p_load(ggplot2, tidyverse)
# Loading files from google drive
id_2014 <- "1Nes6x0xB-M2tnPu4DA0AJbD0hVuiXDc4" # google file ID - hbsc 2014
hbsc2014<- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id_2014)) # data hbsc 2014
View(hbsc2014)
hbsc2014$COUNTRYno <- (ifelse(hbsc2014$COUNTRYno == "8000","Albania", ifelse(hbsc2014$COUNTRYno == "40000", "Austria", ifelse(hbsc2014$COUNTRYno == "51000","Armenia", ifelse(hbsc2014$COUNTRYno == "8000","Albania", ifelse(hbsc2014$COUNTRYno == "56001","Belgium (Flemish)", ifelse(hbsc2014$COUNTRYno == "56002","Belgium (French)", ifelse(hbsc2014$COUNTRYno == "100000","Bulgaria", ifelse(hbsc2014$COUNTRYno == "124000","Canada", ifelse(hbsc2014$COUNTRYno == "191000","Croatia",ifelse(hbsc2014$COUNTRYno == "203000","Czech Republic",ifelse(hbsc2014$COUNTRYno == "208000","Denmark",ifelse(hbsc2014$COUNTRYno == "233000","Estonia",ifelse(hbsc2014$COUNTRYno == "246000","Finland",ifelse(hbsc2014$COUNTRYno == "250000","France",ifelse(hbsc2014$COUNTRYno == "276000","Germany",ifelse(hbsc2014$COUNTRYno == "300000","Greece",ifelse(hbsc2014$COUNTRYno == "304000","Greenland",ifelse(hbsc2014$COUNTRYno == "348000","Hungary",ifelse(hbsc2014$COUNTRYno == "352000","Iceland",ifelse(hbsc2014$COUNTRYno == "372000","Ireland",ifelse(hbsc2014$COUNTRYno == "376000","Israel",ifelse(hbsc2014$COUNTRYno == "380000","Italy",ifelse(hbsc2014$COUNTRYno == "428000","Latvia",ifelse(hbsc2014$COUNTRYno == "440000","Lithuania",ifelse(hbsc2014$COUNTRYno == "442000","Luxembourg",ifelse(hbsc2014$COUNTRYno == "470000","Malta",ifelse(hbsc2014$COUNTRYno == "498000","Republic of Moldova",ifelse(hbsc2014$COUNTRYno == "528000","Netherlands",ifelse(hbsc2014$COUNTRYno == "578000","Norway",ifelse(hbsc2014$COUNTRYno == "616000","Poland",ifelse(hbsc2014$COUNTRYno == "620000","Portugal",ifelse(hbsc2014$COUNTRYno == "642000","Romania",ifelse(hbsc2014$COUNTRYno == "643000","Russia",ifelse(hbsc2014$COUNTRYno == "703000","Slovakia",ifelse(hbsc2014$COUNTRYno == "705000","Slovenia",ifelse(hbsc2014$COUNTRYno == "724000","Spain",ifelse(hbsc2014$COUNTRYno == "752000","Sweden",ifelse(hbsc2014$COUNTRYno == "756000","Switzerland",ifelse(hbsc2014$COUNTRYno == "792000","Turkey",ifelse(hbsc2014$COUNTRYno == "804000","Ukraine",ifelse(hbsc2014$COUNTRYno == "807000","Macedonia",ifelse(hbsc2014$COUNTRYno == "826001","England",ifelse(hbsc2014$COUNTRYno == "826002","Scotland",ifelse(hbsc2014$COUNTRYno == "826003","Wales",ifelse(hbsc2014$COUNTRYno == "840000","USA", NA))))))))))))))))))))))))))))))))))))))))))))))
#Quick try
russia <- hbsc2014 %>%
filter(COUNTRYno == "Russia")
View(russia)
russia$ondiet
length(russia$ondiet == 3)
length(which(russia$ondiet == 3))
length(which(russia$ondiet == 1))
length(which(russia$ondiet == 2))
length(which(russia$ondiet == 4))
dk <- hbsc2014 %>%
filter(COUNTRYno == "Denmark")
length(which(dk$ondiet == 3))
length(which(dk$ondiet == 1))
length(which(dk$ondiet == 2))
length(which(dk$ondiet == 4))
length(which(dk$ondiet == 1))
length(which(dk$ondiet == 2))
length(which(dk$ondiet == 3))
length(which(dk$ondiet == 4))
a<- which(hbsc2014$toothbr == 5)
new <- hbsc2014 %>%
filter(hbsc2014$toothbr == 5)
View(new)
ls.str(new)
unique(new$COUNTRYno)
length(unique(new$COUNTRYno))
unique(count(new$COUNTRYno))
ggplot(hbsc2014, aes(lifesat, colour = COUNTRYno)) +
geom_histogram(aes(y = ..density..)) + stat_function(fun = dnorm, args = list(mean = mean(df$balloon),
sd = sd(hbsc2014$softdrinks)), colour = "red", size = 1) + theme_bw()+
facet_wrap(~COUNTRYno)+
labs(x = "Softdrinks", y = "y")+
ggtitle("Life satisfaction score per country")+
theme_minimal()
ggplot(hbsc2014, aes(lifesat, colour = COUNTRYno)) +
geom_histogram(aes(y = ..density..)) + theme_bw()+
facet_wrap(~COUNTRYno)+
labs(x = "Softdrinks", y = "y")+
ggtitle("Life satisfaction score per country")+
theme_minimal()
length(which(!is.na(hbsc2014$breakfastwd))) #205953 responses, ~ 8000 NA's
length(which(!is.na(hbsc2014$breakfastwe)))
small <- hbsc2014[,10]
small <- hbsc2014[:,10]
small <- hbsc2014[,100]
small <- data.frame(small)
small <- hbsc2014[hbsc2014[,100]]
small <- hbsc2014[hbsc2014[1:100,]]
small <- hbsc2014[1:100,]
View(small)
small %>%
mutate_if(is.numeric, ~replace_na(.,mean(., na.rm = TRUE)))
View(small)
small <- small %>%
mutate_if(is.numeric, ~replace_na(.,mean(., na.rm = TRUE)))
View(small)
ls.str(small)
ls.str(hbsc2014)
ls.str(small)
small <- hbsc2014[1:100,]
for (i in seq_along(small)){
ifelse(is.na(i) == TRUE | "-99", mean(ncol(small), NA))
}
for (i in seq_along(small)){
ifelse(is.na(i) == TRUE, mean(ncol(small), NA))
}
ifelse(is.na(i) == TRUE, mean(ncol(small)), NA )
for (i in seq_along(small)){
ifelse(is.na(i) == TRUE, mean(ncol(small)), NA )
}
View(small)
small <- hbsc2014[1:100,]
View(small)
for (i in seq_along(small)){
ifelse(is.na(i) == TRUE, mean(., na.rm = TRUE), NA)
}
View(small)
small <- small %>%
mutate_if(is.numeric, ~replace_na(.,mean(., na.rm = TRUE)))
View(small)
small <- small %>%
mutate_if(is.numeric, ~replace_na(.,mean(., na.rm = TRUE))) %>%
mutate_if("-99", ~replace_na(.,mean(., na.rm = TRUE)))
small <- hbsc2014[1:100,]
small <- small %>%
replace_with_na(replace = list(x = -99)) %>%
mutate_if(is.numeric, ~replace_na(.,mean(., na.rm = TRUE)))
?replace_with_na()
small <- small %>%
naniar::replace_with_na(replace = list(x = -99)) %>%
mutate_if(is.numeric, ~replace_na(.,mean(., na.rm = TRUE)))
pacman::p_load(naniar)
small <- small %>%
naniar::replace_with_na(replace = list(x = -99)) %>%
mutate_if(is.numeric, ~replace_na(.,mean(., na.rm = TRUE)))
View(small)
small <- hbsc2014[1:250,]
View(small)
small <- small %>%
naniar::replace_with_na(replace = list(x = -99)) %>%
mutate_if(is.numeric, ~replace_na(.,mean(., na.rm = TRUE)))
small <- hbsc2014[1:250,]
small <- small %>%
naniar::replace_with_na(replace = "-99") %>%
mutate_if(is.numeric, ~replace_na(.,mean(., na.rm = TRUE)))
small <- small %>%
naniar::replace_with_na(replace = list(-99)) %>%
mutate_if(is.numeric, ~replace_na(.,mean(., na.rm = TRUE)))
View(small)
small <- hbsc2014[1:250,]
small[small==-99] <- NA
small <- small %>%
mutate_if(is.numeric, ~replace_na(.,mean(., na.rm = TRUE)))
#
hbsc2014[hbsc2014==-99] <- NA
hbsc2014 <- hbsc2014 %>%
mutate_if(is.numeric, ~replace_na(.,mean(., na.rm = TRUE)))
ggplot(hbsc2014, aes(lifesat, colour = COUNTRYno)) +
geom_histogram(aes(y = ..density..)) + theme_bw()+
facet_wrap(~COUNTRYno)+
labs(x = "Softdrinks", y = "y")+
ggtitle("Life satisfaction score per country")+
theme_minimal()
View(small)
#Replacing NA's and -99's with mean of each colum
hbsc2014[hbsc2014==-99] <- NA
hbsc2014[hbsc2014==NaN] <- NA
hbsc2014 <- hbsc2014 %>%
mutate_if(is.numeric, ~replace_na(.,mean(., na.rm = TRUE)))
small <- hbsc2014[250,]
small <- hbsc2014[1:250,]
small[small==-99] <- NA
small[small==NaN] <- NA
is.nan(small)
is.nan(small$HBSC)
small[small == is.nan()] <- NA
small[small == is.nan(seq_along(small))] <- NA
